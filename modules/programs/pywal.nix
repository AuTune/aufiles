{
  lib,
  user,
  config,
  pkgs,
  ...
}: let
  cfg = config.iynaix.pywal;
in {
  options.iynaix = {
    pywal.enable = lib.mkEnableOption "pywal" // {default = true;};
    pywal.backend = lib.mkOption {
      type = lib.types.enum [
        "colorthief"
        "colorz"
        "haishoku"
        "schemer2"
        "wal"
      ];
      default = "wal";
      description = ''
        Wal backend to use for generating colors.
      '';
    };
  };

  config = lib.mkIf cfg.enable {
    home-manager.users.${user} = {
      programs.pywal.enable = true;

      xdg.configFile."wal/templates/colors-hexless.sh".text = ''
        # Shell variables
        # Generated by 'wal'
        wallpaper="{wallpaper}"

        # Special
        background='{background.strip}'
        foreground='{foreground.strip}'
        cursor='{cursor.strip}'

        # Colors
        color0='{color0.strip}'
        color1='{color1.strip}'
        color2='{color2.strip}'
        color3='{color3.strip}'
        color4='{color4.strip}'
        color5='{color5.strip}'
        color6='{color6.strip}'
        color7='{color7.strip}'
        color8='{color8.strip}'
        color9='{color9.strip}'
        color10='{color10.strip}'
        color11='{color11.strip}'
        color12='{color12.strip}'
        color13='{color13.strip}'
        color14='{color14.strip}'
        color15='{color15.strip}'

        # FZF colors
        export FZF_DEFAULT_OPTS="
            $FZF_DEFAULT_OPTS
            --color fg:7,bg:0,hl:1,fg+:232,bg+:1,hl+:255
            --color info:7,prompt:2,spinner:1,pointer:232,marker:1
        "

        # Fix LS_COLORS being unreadable.
        export LS_COLORS="''${{LS_COLORS}}:su=30;41:ow=30;42:st=30;44:"
      '';
    };

    nixpkgs.overlays = [
      (self: super: {
        pywal = super.pywal.overrideAttrs (oldAttrs: {
          propagatedBuildInputs = with pkgs;
            oldAttrs.propagatedBuildInputs
            ++ lib.optional (cfg.backend == "colorthief") [
              python3Packages.colorthief
            ]
            ++ lib.optional (cfg.backend == "colorz") [
              python3Packages.colorz
            ]
            ++ lib.optional (cfg.backend == "haishoku") [
              pkgs.python3Packages.buildPythonPackage
              rec {
                pname = "haishoku";
                version = "1.1.8";
                src = super.fetchFromGitHub {
                  owner = "LanceGin";
                  repo = "haishoku";
                  rev = "v${version}";
                  sha256 = "sha256-LSoZopCaM5vbknGS9gG13OZIgghgqJvPtktUkBCH04Q=";
                };

                propagatedBuildInputs = [pkgs.python3Packages.pillow];
              }
            ]
            ++ lib.optional (cfg.backend == "schemer2") [
              pkgs.buildGoPackage
              rec {
                pname = "schemer2";
                version = "2019-04-06";
                rev = "89a66cbf40440e82921719c6919f11bb563d7cfa";

                goPackagePath = "github.com/thefryscorer/schemer2";

                src = super.fetchFromGitHub {
                  inherit rev;
                  owner = "thefryscorer";
                  repo = "schemer2";
                  sha256 = "0z1nv9gdswfci6y180slvyx4ba2ifc4ifb1b39mdrik4hg7xba0h";
                };
              }
            ];
        });
      })
    ];

    iynaix.persist.home.directories = [
      ".config/wal"
      ".cache/wal"
    ];
  };
}
